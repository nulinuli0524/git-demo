name: Build Ghostscript for OpenHarmony

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OHOS_NDK_VERSION: "4.1.0.0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup OpenHarmony NDK
      run: |
        # 使用新的 NDK 下载格式
        NDK_URL="https://repo.huaweicloud.com/harmonyos/develop_tools/ohos-sdk/${OHOS_NDK_VERSION}/ohos-sdk-linux.tar.gz"
        wget $NDK_URL -O ndk.tar.gz
        mkdir -p ${{ runner.temp }}/ndk
        tar -xzf ndk.tar.gz -C ${{ runner.temp }}/ndk --strip-components=1
        
        # 设置环境变量
        OHOS_NDK_ROOT="${{ runner.temp }}/ndk/native"
        echo "NDK_PATH=$OHOS_NDK_ROOT" >> $GITHUB_ENV
        echo "OHOS_NDK_ROOT=$OHOS_NDK_ROOT" >> $GITHUB_ENV

    - name: Build Ghostscript
      run: |
        git clone --depth 1 https://github.com/ArtifexSoftware/ghostpdl.git
        cd ghostpdl
        
        # 精简配置
        cat > base/custom.mak << EOF
        SHARE_JPEG=no
        SHARE_LIBPNG=no
        SHARE_ZLIB=no
        CCAUX=gcc
        CC=$NDK_PATH/llvm/bin/clang
        CFLAGS_STANDARD=--sysroot=$NDK_PATH/sysroot -fPIE
        XCFLAGS=--target=arm-linux-ohos
        EOF
        
        # 交叉编译
        ./configure --host=arm-linux-ohos \
                    --prefix=/ \
                    --disable-cups \
                    --disable-gtk
        
        make -j$(nproc) so
        make DESTDIR=./install/${{ matrix.arch }} install-so
        
        # 准备上传
        mkdir -p artifacts/${{ matrix.arch }}
        cp install/${{ matrix.arch }}/lib/*.so artifacts/${{ matrix.arch }}/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ghostscript-${{ matrix.arch }}
        path: ghostpdl/artifacts/${{ matrix.arch }}
        retention-days: 7

    - name: Clean up
      run: rm -rf ghostpdl
