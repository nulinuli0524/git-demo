name: Ghostscript Build Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OHOS_NDK_VERSION: "4.1.0.0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup OpenHarmony NDK
      run: |
        NDK_URL="https://repo.huaweicloud.com/harmonyos/develop_tools/ohos-sdk/ohos-sdk-linux-$OHOS_NDK_VERSION.zip"
        wget $NDK_URL -O ndk.zip
        unzip ndk.zip -d ${{ runner.temp }}/ndk
        echo "NDK_PATH=${{ runner.temp }}/ndk/ohos-sdk" >> $GITHUB_ENV

    - name: Build Ghostscript
      run: |
        git clone --depth 1 https://github.com/ArtifexSoftware/ghostpdl.git
        cd ghostpdl
        
        # 精简配置
        cat > custom.mak << EOF
        SHARE_JPEG=no
        SHARE_LIBPNG=no
        SHARE_ZLIB=no
        EOF
        
        # 交叉编译
        export CC="$NDK_PATH/llvm/bin/clang"
        export CFLAGS="--target=armv7a-linux-ohos -march=armv7-a --sysroot=$NDK_PATH/sysroot"
        ./configure --host=arm-linux-ohos \
                    --prefix=/ \
                    --disable-cups \
                    --disable-gtk
        
        make -j$(nproc)
        make DESTDIR=./install/${{ matrix.arch }} install
        
        # 准备上传
        mkdir -p artifacts/${{ matrix.arch }}
        cp -r install/${{ matrix.arch }}/* artifacts/${{ matrix.arch }}/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ghostscript-${{ matrix.arch }}
        path: ghostpdl/artifacts/${{ matrix.arch }}
        retention-days: 7  # 设置自动清理时间

    - name: Clean up
      run: |
        rm -rf ghostpdl
        rm -rf ${{ runner.temp }}/ndk
