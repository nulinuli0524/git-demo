name: Build & Release Ghostscript Shared Library

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-ghostscript.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      install-dir: ${{ steps.set-install-dir.outputs.dir }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libtool automake pkg-config \
            libjpeg-dev libpng-dev zlib1g-dev

      - name: Clone Ghostscript (GhostPDL) source
        run: |
          git clone https://github.com/ArtifexSoftware/ghostpdl.git
          cd ghostpdl
          git submodule update --init

      - name: Prepare install directory
        id: set-install-dir
        run: |
          INSTALL_DIR="$HOME/ghostscript-install"
          mkdir -p "$INSTALL_DIR"
          echo "::set-output name=dir::$INSTALL_DIR"

      - name: Configure & build Ghostscript
        run: |
          cd ghostpdl
          ./autogen.sh
          ./configure --enable-shared --disable-gtk \
                      --prefix="${{ steps.set-install-dir.outputs.dir }}"
          make -j$(nproc)
          make install

      - name: Upload built shared library as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ghostscript-lib
          path: ${{ steps.set-install-dir.outputs.dir }}/lib

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ghostscript-lib
          path: ./artifacts/lib

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "ghostscript-${{ github.run_number }}"
          name: "Ghostscript Shared Library Build #${{ github.run_number }}"
          draft: false
          prerelease: false
          files: |
            artifacts/lib/libgs.so
            artifacts/lib/libgs.so.*  # 如果有版本化的 so

