name: Build & Release Ghostscript Shared Library

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-ghostscript.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool automake \
                                 pkg-config libjpeg-dev libpng-dev zlib1g-dev

      - name: Clone Ghostscript (GhostPDL) source
        run: |
          git clone https://github.com/ArtifexSoftware/ghostpdl.git
          cd ghostpdl
          git submodule update --init

      - name: Configure and build Ghostscript
        run: |
          mkdir -p $HOME/ghostscript-install
          cd ghostpdl
          ./autogen.sh
          ./configure --enable-shared --disable-gtk \
                      --prefix="$HOME/ghostscript-install"
          make -j$(nproc)
          make install

      - name: Package shared libraries
        run: |
          cd $HOME/ghostscript-install/lib
          tar czf $GITHUB_WORKSPACE/ghostscript-lib.tar.gz ./*.so*

      - name: Upload shared library artifact
        uses: actions/upload-artifact@v4
        with:
          name: ghostscript-lib
          path: ghostscript-lib.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download shared library artifact
        uses: actions/download-artifact@v4
        with:
          name: ghostscript-lib
          path: ./artifact

      - name: Extract library files
        run: |
          mkdir extracted
          tar xzf artifact/ghostscript-lib.tar.gz -C extracted

      - name: Create GitHub Release and attach libraries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ghostscript-lib-${{ github.run_number }}
          name: Ghostscript Shared Library Build #${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            extracted/*.so*
